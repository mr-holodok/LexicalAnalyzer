hashTable.insert("alignas");
hashTable.insert("alignof");
hashTable.insert("and");
hashTable.insert("and_eq");
hashTable.insert("asm");
hashTable.insert("auto");
hashTable.insert("bitand");
hashTable.insert("bitor");
hashTable.insert("bool");
hashTable.insert("break");
hashTable.insert("case");
hashTable.insert("catch");
hashTable.insert("char");
hashTable.insert("char16_t");
hashTable.insert("char32_t");
hashTable.insert("class");
hashTable.insert("compl");
hashTable.insert("const");
hashTable.insert("constexpr");
hashTable.insert("const_cast");
hashTable.insert("continue");
hashTable.insert("decltype");
hashTable.insert("default");
hashTable.insert("delete");
hashTable.insert("do");
hashTable.insert("double");
hashTable.insert("dynamic_cast");
hashTable.insert("else");
hashTable.insert("enum");
hashTable.insert("explicit");
hashTable.insert("export");
hashTable.insert("extern");
hashTable.insert("false");
hashTable.insert("float");
hashTable.insert("for");
hashTable.insert("friend");
hashTable.insert("goto");
hashTable.insert("if");
hashTable.insert("inline");
hashTable.insert("int");
hashTable.insert("long");
hashTable.insert("mutable");
hashTable.insert("namespace");
hashTable.insert("new");
hashTable.insert("noexcept");
hashTable.insert("not");
hashTable.insert("not_eq");
hashTable.insert("nullptr");
hashTable.insert("operator");
hashTable.insert("or");
hashTable.insert("or_eq");
hashTable.insert("private");
hashTable.insert("protected");
hashTable.insert("public");
hashTable.insert("register");
hashTable.insert("reinterpret_cast");
hashTable.insert("return");
hashTable.insert("short");
hashTable.insert("signed");
hashTable.insert("sizeof");
hashTable.insert("static");
hashTable.insert("static_assert");
hashTable.insert("static_cast");
hashTable.insert("struct");
hashTable.insert("switch");
hashTable.insert("template");
hashTable.insert("this");
hashTable.insert("thread_local");
hashTable.insert("throw");
hashTable.insert("true");
hashTable.insert("try");
hashTable.insert("typedef");
hashTable.insert("typeid");
hashTable.insert("typename");
hashTable.insert("union");
hashTable.insert("unsigned");
hashTable.insert("using");
hashTable.insert("virtual");
hashTable.insert("void");
hashTable.insert("volatile");
hashTable.insert("wchar_t");
hashTable.insert("while");
hashTable.insert("xor");
hashTable.insert("xor_eq");
