#pragma hdrstop
#pragma argsused

#include <iostream.h>
#include "Unit1.h"
#include <fstream.h>

#ifdef _WIN32
#include <tchar.h>
#else
  typedef char _TCHAR;
  #define _tmain main
#endif

#include <stdio.h>

 int _tmain(int argc, _TCHAR* argv[])
{
	HashTable hashTable; //= HashTable();
	//hashTable.insert("int");

    ifstream file; //file that contains text of program
	file.open("L://Embarcadero RAD Studio XE8 22.0.19027.8951 Architect//PROJECTS//Scanner//hash.txt");
	if (!file) {
		std::cout << "File not found!";
	}

	ofstream f;
	f.open("L://Embarcadero RAD Studio XE8 22.0.19027.8951 Architect//PROJECTS//Scanner//h.txt");

	//char buff[50];
	std::string buff;
	int n = 0;

	while(!file.eof()) //loop to end of file. Reads every character
	{
		file >> buff;
		std::cout << buff << " " << hashTable.generateKey(buff) << " ";
		n = hashTable.hashFunction(hashTable.generateKey(buff));
		std::cout << n << std::endl;
		f << n << std::endl;
	}
	f.close();
	file.close();

   //generateKey("private");

	int a = 0;
	std::cin >> a;
	return 0;
}
